{"version":3,"file":"parser.js","sources":["../src/errors.ts","../src/parser.ts"],"sourcesContent":["export const GLOBALS: {\n  [key: string]: string;\n} = {\n  FILENAME: '.salte-ci.yml',\n};\n\nexport class ParsingException extends Error {\n  public code: ParsingException.Codes;\n\n  constructor({ message, code }: ParsingException.Options) {\n    super(message.replace(/{{(\\w+)}}/g, (match: string, name: string) => {\n      return GLOBALS[name.toUpperCase()] || match;\n    }));\n\n    this.code = code;\n  }\n}\n\nexport declare namespace ParsingException {\n  type Codes = ('malformed_yaml');\n  type Options = {\n    message: string;\n    code: Codes;\n  };\n}\n","import YAML from 'yaml';\nimport outdent from 'outdent';\nimport { Raw, Parsed } from './types';\nimport { ParsingException } from './errors';\n\n\n/**\n *\n * @param yaml - the yaml to parse.\n */\nexport function parse(yaml: string): Parsed {\n  const output = YAML.parse(yaml) as Raw;\n\n  if (!output || typeof(output) !== 'object' || Array.isArray(output) || typeof(output.image) !== 'string' || !Array.isArray(output.steps) || output.steps.length === 0) {\n    throw new ParsingException({\n      message: outdent`\n        Expected \"{{filename}}\" match the following format.\n\n        image: node:alpine\n        steps:\n          - npm i\n      `,\n      code: 'malformed_yaml',\n    });\n  }\n\n  return {\n    image: output.image,\n    steps: output.steps,\n  };\n}\n"],"names":["GLOBALS","FILENAME","ParsingException","Error","constructor","message","code","replace","match","name","toUpperCase","parse","yaml","output","YAML","Array","isArray","image","steps","length","outdent"],"mappings":";;;;;AAAO,MAAMA,OAAO,GAEhB;AACFC,EAAAA,QAAQ,EAAE;AADR,CAFG;MAMMC,yBAAyBC;AAGpCC,EAAAA,YAAY;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AACV,UAAMD,OAAO,CAACE,OAAR,CAAgB,YAAhB,EAA8B,CAACC,KAAD,EAAgBC,IAAhB;AAClC,aAAOT,OAAO,CAACS,IAAI,CAACC,WAAL,EAAD,CAAP,IAA+BF,KAAtC;AACD,KAFK,CAAN;AAIA,SAAKF,IAAL,GAAYA,IAAZ;AACD;;;;ACTH;;;;;AAIA,SAAgBK,MAAMC;AACpB,QAAMC,MAAM,GAAGC,IAAI,CAACH,KAAL,CAAWC,IAAX,CAAf;;AAEA,MAAI,CAACC,MAAD,IAAW,OAAOA,MAAP,KAAmB,QAA9B,IAA0CE,KAAK,CAACC,OAAN,CAAcH,MAAd,CAA1C,IAAmE,OAAOA,MAAM,CAACI,KAAd,KAAyB,QAA5F,IAAwG,CAACF,KAAK,CAACC,OAAN,CAAcH,MAAM,CAACK,KAArB,CAAzG,IAAwIL,MAAM,CAACK,KAAP,CAAaC,MAAb,KAAwB,CAApK,EAAuK;AACrK,UAAM,IAAIjB,gBAAJ,CAAqB;AACzBG,MAAAA,OAAO,EAAEe;;;;;;OADgB;AAQzBd,MAAAA,IAAI,EAAE;AARmB,KAArB,CAAN;AAUD;;AAED,SAAO;AACLW,IAAAA,KAAK,EAAEJ,MAAM,CAACI,KADT;AAELC,IAAAA,KAAK,EAAEL,MAAM,CAACK;AAFT,GAAP;AAID;;;;"}